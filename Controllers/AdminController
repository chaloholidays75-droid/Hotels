// using Microsoft.AspNetCore.Mvc;
// using Microsoft.EntityFrameworkCore;
// using System;
// using System.Collections.Generic;
// using System.Linq;
// using System.Threading.Tasks;
// using HotelAPI.Data;
// using HotelAPI.Models;
// using HotelAPI.Models.DTO;
// using Microsoft.AspNetCore.Authorization;

// namespace HotelAPI.Controllers
// {
//     [Authorize(Roles = "Admin")] // Only admin access
//     [ApiController]
//     [Route("api/[controller]")]
//     public class AdminController : ControllerBase
//     {
//         private readonly AppDbContext _context;

//         public AdminController(AppDbContext context)
//         {
//             _context = context;
//         }

//         // GET: api/admin/agencies
//         [HttpGet("agencies")]
//         public async Task<ActionResult<IEnumerable<Agency>>> GetAllAgencies()
//         {
//             var agencies = await _context.Agencies
//                                          .Include(a => a.Country)
//                                          .Include(a => a.City)
//                                          .ToListAsync();
//             return Ok(agencies);
//         }

//         // PATCH: api/admin/agency/{id}/status
//         [HttpPatch("agency/{id}/status")]
//         public async Task<IActionResult> UpdateAgencyStatus(int id, [FromBody] bool isActive)
//         {
//             var agency = await _context.Agencies.FindAsync(id);
//             if (agency == null)
//                 return NotFound(new { message = "Agency not found" });

//             agency.IsActive = isActive;
//             agency.UpdatedAt = DateTime.UtcNow;

//             _context.Entry(agency).State = EntityState.Modified;
//             await _context.SaveChangesAsync();

//             return Ok(new { message = $"Agency {(isActive ? "activated" : "deactivated")} successfully" });
//         }

//         // DELETE: api/admin/agency/{id}
//         [HttpDelete("agency/{id}")]
//         public async Task<IActionResult> DeleteAgency(int id)
//         {
//             var agency = await _context.Agencies.FindAsync(id);
//             if (agency == null)
//                 return NotFound(new { message = "Agency not found" });

//             agency.IsActive = false; // Soft delete
//             agency.UpdatedAt = DateTime.UtcNow;

//             _context.Entry(agency).State = EntityState.Modified;
//             await _context.SaveChangesAsync();

//             return NoContent();
//         }

//         // GET: api/admin/hotels
//         [HttpGet("hotels")]
//         public async Task<ActionResult<IEnumerable<HotelInfo>>> GetAllHotels()
//         {
//             var hotels = await _context.HotelInfo
//                                        .Include(h => h.City)
//                                        .Include(h => h.Country)
//                                        .Include(h => h.HotelStaff)
//                                        .ToListAsync();
//             return Ok(hotels);
//         }

//         // PATCH: api/admin/hotel/{id}/status
//         [HttpPatch("hotel/{id}/status")]
//         public async Task<IActionResult> UpdateHotelStatus(int id, [FromBody] bool isActive)
//         {
//             var hotel = await _context.HotelInfo.FindAsync(id);
//             if (hotel == null)
//                 return NotFound(new { message = "Hotel not found" });

//             hotel.IsActive = isActive;
//             hotel.UpdatedAt = DateTime.UtcNow;

//             _context.Entry(hotel).State = EntityState.Modified;
//             await _context.SaveChangesAsync();

//             return Ok(new { message = $"Hotel {(isActive ? "activated" : "deactivated")} successfully" });
//         }

//         // DELETE: api/admin/hotel/{id}
//         [HttpDelete("hotel/{id}")]
//         public async Task<IActionResult> DeleteHotel(int id)
//         {
//             var hotel = await _context.HotelInfo
//                                       .Include(h => h.HotelStaff)
//                                       .FirstOrDefaultAsync(h => h.Id == id);

//             if (hotel == null)
//                 return NotFound(new { message = "Hotel not found" });

//             _context.HotelStaff.RemoveRange(hotel.HotelStaff);
//             _context.HotelInfo.Remove(hotel);
//             await _context.SaveChangesAsync();

//             return NoContent();
//         }

//         // GET: api/admin/dashboard
//         [HttpGet("dashboard")]
//         public async Task<ActionResult> GetDashboardStats()
//         {
//             var totalAgencies = await _context.Agencies.CountAsync();
//             var activeAgencies = await _context.Agencies.CountAsync(a => a.IsActive);
//             var totalHotels = await _context.HotelInfo.CountAsync();
//             var activeHotels = await _context.HotelInfo.CountAsync(h => h.IsActive);

//             return Ok(new
//             {
//                 TotalAgencies = totalAgencies,
//                 ActiveAgencies = activeAgencies,
//                 TotalHotels = totalHotels,
//                 ActiveHotels = activeHotels
//             });
//         }
//     }
// }
